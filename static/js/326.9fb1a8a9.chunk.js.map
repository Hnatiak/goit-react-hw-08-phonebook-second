{"version":3,"file":"static/js/326.9fb1a8a9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/app/app-selectors.js","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"button_seccond\":\"ContactForm_button_seccond__Akv4A\"};","// import { useState } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { TextField, Button } from '@mui/material';\n// import style from \"./ContactForm.module.css\";\n\n// const ContactForm = ({ onSubmitData }) => {\n// const [state, setState] = useState({\n// name: \"\",\n// number: \"\",\n// });\n\n// const handleChange = (event) => {\n// const { name, value } = event.currentTarget;\n// setState((prevState) => ({ ...prevState, [name]: value }));\n// };\n\n// const handleSubmit = (event) => {\n// event.preventDefault();\n// const { name, number } = state;\n// const contactForAdd = { name, number };\n// onSubmitData(contactForAdd);\n// reset();\n// };\n\n// const reset = () => {\n// setState({ name: \"\", number: \"\" });\n// };\n\n// return (\n// <div className={style.form}>\n//   <h1 style={{ marginBottom: 25 }}>Add contact</h1>\n//   <form type=\"submit\" onSubmit={handleSubmit}>\n//     <TextField\n//     label=\"Name:\"\n//     type=\"text\"\n//     name=\"name\"\n//     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я])$\"\n//     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//     required\n//     onChange={handleChange}\n//     value={state.name}\n//     style={{ marginRight: 25 }}\n//     />\n//     <TextField\n//            label=\"Number:\"\n//            type=\"tel\"\n//            name=\"number\"\n//            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n//            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//            required\n//            onChange={handleChange}\n//            value={state.number}\n//          />\n//     <br />\n//     <Button\n//     className={style.button_second}\n//     type=\"submit\"\n//     variant=\"contained\"\n//     color=\"primary\"\n//     style={{ marginTop: 25 }}\n//     >\n//     Add contact\n//     </Button>\n//   </form>\n// </div>\n// );\n// };\n\n// ContactForm.propTypes = {\n// onSubmitData: PropTypes.func.isRequired,\n// };\n\n// export default ContactForm;\n\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Button } from '@mui/material';\nimport style from \"./ContactForm.module.css\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nconst ContactForm = ({ onSubmitData }) => {\n  const [state, setState] = useState({\n    name: \"\",\n    number: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, number } = state;\n    const contactForAdd = { name, number };\n    onSubmitData(contactForAdd);\n    reset();\n  };\n\n  const reset = () => {\n    setState({ name: \"\", number: \"\" });\n  };\n  \n  const handlePhoneInputChange = (event) => {\n    let { value } = event.currentTarget;\n  \n    if (value && !value.startsWith(\"+\")) {\n      value = \"+\" + value;\n    }\n  \n    const phoneNumber = parsePhoneNumberFromString(value);\n    const formattedPhoneNumber = phoneNumber ? phoneNumber.formatInternational() : value;\n  \n    setState((prevState) => ({ ...prevState, number: formattedPhoneNumber }));\n  };\n\n  return (\n    <div className={style.form}>\n      <h1 style={{ marginBottom: 25 }}>Add contact</h1>\n      <form type=\"submit\" onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name:\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я])$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={state.name}\n          style={{ marginRight: 25 }}\n        />\n        <TextField\n          label=\"Number:\"\n          type=\"tel\"\n          name=\"number\"\n          inputMode=\"numeric\"\n          title=\"Phone number must start with + and contain only digits, spaces, dashes, and parentheses\"\n          required\n          onChange={handlePhoneInputChange}\n          value={state.number}\n          inputProps={{ minLength: 7 }}\n        />\n        <br />\n        <Button\n          className={style.button_second}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginTop: 25 }}\n        >\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"icon\":\"ContactList_icon__Ly80F\",\"text\":\"ContactList_text__+NWAW\",\"span\":\"ContactList_span__Mbz+M\",\"wrapper\":\"ContactList_wrapper__VP-XU\",\"button\":\"ContactList_button__7kL4l\",\"button_second\":\"ContactList_button_second__SaNPw\",\"contacts_list\":\"ContactList_contacts_list__jhchV\"};","import PropTypes from \"prop-types\";\nimport { Button } from \"@mui/material\";\nimport css from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, del }) {\nconst deleteId = (Id) => {\ndel(Id);\n};\n\nconst createList = () => {\n  return contacts.map((contact) => {\n    return (\n    <li key={contact.id} id={contact.id} className={css.contacts_list}>\n    <Button\n    className={css.button_second}\n    data-id={contact.id}\n    variant=\"contained\"\n    color=\"primary\"\n    onClick={() => deleteId(contact.id)}\n    >\n    Delete\n    </Button>\n      {`${contact.name}: ${contact.number}`}\n    </li>\n    );\n  });\n};\n\nreturn <ul>{createList()}</ul>;\n}\n\nContactList.propTypes = {\ncontacts: PropTypes.array,\ndel: PropTypes.func.isRequired,\n};\n\nContactList.defaultProps = {\ncontacts: [],\n};\n\nexport default ContactList;","import { TextField } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nfunction Filter(props) {\n  const setFilterValue = (event) => {\n    let value = event.currentTarget.value.toUpperCase();\n    props.setFilterToState(value);\n  };\n\n  return (\n    <div>\n      <TextField\n        label=\"Filter\"\n        onChange={setFilterValue}\n        style={{ marginBottom: 25, width: 475 }}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getIsLoading = (state) => state.app.loading;\nconst getFilter = (state) => state.app.filters;\nconst getContacts = (state) => state.app.contacts;\n\n/* const getVisibleFilterArray = (state) => {\n  const allContacts = getContacts(state);\n  const filterNames = getFilter(state);\n  let newArr = allContacts.filter(({ name }) =>\n    name.toUpperCase().includes(filterNames)\n  );\n  return [...newArr];\n}; */\n\n// add memo\nconst getVisibleFilterArray = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    let newArr = contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter)\n    );\n    return [...newArr];\n  }\n);\n\nconst contactsSelector = {\n  getIsLoading, getFilter, getContacts, getVisibleFilterArray\n}\n\nexport default contactsSelector;\n","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\nimport appActions from \"../redux/app/app-actions\";\nimport appOperations from \"../redux/app/app-operations\";\nimport selectors from \"../redux/app/app-selectors\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction ContactsView({\n  isLoadingContacts,\n  contacts,\n  filter,\n  visibleArray,\n  fetchContacts,\n  formSubmitHandler,\n  contactDelete,\n  filterSet,\n}) {\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <div className=\"contacts\" style={{ marginTop: 65 }}>\n      {/* <h1 className={styles.title}>\n         {/* Phone<span className={styles.title__color}>book</span>\n       </h1> */}\n      {isLoadingContacts && <h2>Loading ...</h2>}\n      <ContactForm onSubmitData={formSubmitHandler} />\n      <h1 style={{ marginBottom: 25 }}>Contacts</h1>\n      <Filter setFilterToState={filterSet} />\n      <ToastContainer />\n      <ContactList contacts={visibleArray} del={contactDelete} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  visibleArray: selectors.getVisibleFilterArray(state),\n});\n\nconst mapDispatchToProrps = (dispatch) => ({\n  fetchContacts: () => dispatch(appOperations.fetchContacts()),\n  formSubmitHandler: (contactData) =>\n    dispatch(appOperations.addContact(contactData)),\n  contactDelete: (contactId) =>\n    dispatch(appOperations.deleteContact(contactId)),\n  filterSet: (str) => dispatch(appActions.filterSet(str)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProrps)(ContactsView);"],"names":["onSubmitData","useState","name","number","state","setState","reset","className","style","marginBottom","type","onSubmit","event","preventDefault","TextField","label","pattern","title","required","onChange","currentTarget","value","prevState","marginRight","inputMode","startsWith","phoneNumber","parsePhoneNumberFromString","formattedPhoneNumber","formatInternational","inputProps","minLength","Button","variant","color","marginTop","ContactList","contacts","del","map","contact","id","css","onClick","Id","defaultProps","props","toUpperCase","setFilterToState","width","getFilter","app","filters","getContacts","getIsLoading","loading","getVisibleFilterArray","createSelector","filter","newArr","includes","connect","isLoadingContacts","selectors","visibleArray","dispatch","fetchContacts","appOperations","formSubmitHandler","contactData","contactDelete","contactId","filterSet","str","appActions","useEffect"],"sourceRoot":""}