{"version":3,"file":"static/js/163.6d333650.chunk.js","mappings":"yRACA,EAAuB,yBAAvB,EAA2F,2B,UCMrFA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAgBH,OAhBGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,IAFJ,EAKRC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,UAAL,UAAiBF,EAAOC,GACzB,IAEDE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKZ,OAExB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,IAChD,IAwCA,OAxCA,8BAED,WACE,MAA4BW,KAAKb,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,4BACE,mCAEA,kBACEY,SAAUD,KAAKL,aACfO,UAAWC,EACXC,aAAa,MAHf,WAKE,SAACC,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLf,KAAK,QACLC,MAAOL,EACPoB,SAAUR,KAAKV,gBAEjB,SAACe,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,WACLf,KAAK,WACLC,MAAOJ,EACPmB,SAAUR,KAAKV,gBAEjB,mBACA,SAACmB,EAAA,EAAD,CACEP,UAAWC,EACXI,KAAK,SACLG,QAAQ,YACRC,MAAM,UAJR,uCAWP,OAxDGzB,CAAkB0B,EAAAA,WA2DlBC,EAAqB,CACzBd,QAASe,EAAAA,EAAAA,OAOX,GAAeC,EAAAA,EAAAA,IAAQ,KAAMF,EAA7B,CAAiD3B,E","sources":["webpack://react-homework-template/./src/views/LoginViews.module.css?fd0b","views/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginViews_form__9qJS+\",\"label\":\"LoginViews_label__Z-lC0\",\"button\":\"LoginViews_button__pyuC-\"};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/app/app-operations\";\nimport { Button } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport styles from \"./LoginViews.module.css\";\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={styles.form}\n          autoComplete=\"off\"\n        >\n          <TextField\n            label=\"E-mail:\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            label=\"Password:\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <br />\n          <Button\n            className={styles.button}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            SIGN IN ðŸŸ©\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n//Full version\n// const mapDispatchToProps = dispatch=>{\n//   onSubmit: (data)=>dispatch (authOperations.register(data))\n// }\n\nexport default connect(null, mapDispatchToProps)(LoginView);"],"names":["LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","onSubmit","className","styles","autoComplete","TextField","label","type","onChange","Button","variant","color","Component","mapDispatchToProps","authOperations","connect"],"sourceRoot":""}