{"version":3,"file":"static/js/804.b61eb08b.chunk.js","mappings":"6PAkIMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAiBH,OAjBGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,IAHJ,EAMRC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,UAAL,UAAiBN,EAAOK,GACzB,IAEDE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChD,IAgDA,OAhDA,8BAED,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,4BACE,eAAIW,MAAO,CAAEC,WAAY,UAAzB,2BAEA,kBACEC,SAAUH,KAAKL,aACfM,MAAOtB,EAAOC,KACdwB,aAAa,MAHf,WAKE,SAAC,IAAD,CACEtB,MAAM,QACNuB,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,SAAUN,KAAKT,gBAGjB,SAAC,IAAD,CACET,MAAM,UACNuB,KAAK,QACLjB,KAAK,QACLK,MAAOJ,EACPiB,SAAUN,KAAKT,gBAEjB,SAAC,IAAD,CACET,MAAM,YACNuB,KAAK,WACLjB,KAAK,WACLK,MAAOH,EACPgB,SAAUN,KAAKT,gBAEjB,mBACA,SAAC,IAAD,CACEU,MAAO,CAAEM,UAAW,IACpBF,KAAK,SACLG,QAAQ,YACRC,MAAM,UAJR,uCAWP,OAjEGvB,CAAqBwB,EAAAA,WAoErBC,EAAqB,CACzBZ,WAAYa,EAAAA,EAAAA,UAOd,WAAeC,EAAAA,EAAAA,IAAQ,KAAMF,EAA7B,CAAiDzB,E","sources":["views/RegisterViews.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { fetchContacts, addContact, removeContact } from \"../redux/contacts/contacts-operations\"\n\n// const styles = {\n//     form: {\n//         width: 300,\n//     },\n//     label: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//         marginBottom: 15,\n//     },\n// };\n\n// export default function RegisterViews() {\n//     const dispatch = useDispatch();\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleChange = ({ target: {name, value} }) => {\n//         switch (name) {\n//             case 'name':\n//                 return setName(value);\n//             case 'email':\n//                 return setEmail(value);\n//             case 'password':\n//                 return setPassword(value);\n//             default:\n//                 return;\n//         }\n//     };\n\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         dispatch(contactsOperation.register({ name, email, password}));\n//         setName('');\n//         setEmail('');\n//         setPassword('');\n//     }\n\n//     return (\n//         <div>\n//             <h1>Register Block</h1>\n\n//             <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n//                 <label style={styles.label}>\n//                     Name\n//                     <input type=\"text\" name=\"name\" value={name} onChange={handleChange}></input>\n//                 </label>\n\n//                 <label style={styles.label}>\n//                     E-mail\n//                     <input type=\"email\" name=\"email\" value={email} onChange={handleChange}></input>\n//                 </label>\n//             </form>\n//         </div>\n//     )\n// }\n\n\n// import { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { addContact } from \"../redux/contacts/contacts-actions\";\n\n// const styles = {\n//   form: {\n//     width: 300,\n//   },\n//   label: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     marginBottom: 15,\n//   },\n// };\n\n// export default function RegisterViews() {\n//   const dispatch = useDispatch();\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case 'name':\n//         return setName(value);\n//       case 'email':\n//         return setEmail(value);\n//       case 'password':\n//         return setPassword(value);\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(addContact({ name, email, password }));\n//     setName('');\n//     setEmail('');\n//     setPassword('');\n//   }\n\n//   return (\n//     <div>\n//       <h1>Register Block</h1>\n\n//       <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n//         <label style={styles.label}>\n//           Name\n//           <input type=\"text\" name=\"name\" value={name} onChange={handleChange}></input>\n//         </label>\n\n//         <label style={styles.label}>\n//           E-mail\n//           <input type=\"email\" name=\"email\" value={email} onChange={handleChange}></input>\n//         </label>\n//       </form>\n//     </div>\n//   )\n// }\n\n\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/filter/filter-operations\";\nimport { Button } from '@mui/material';\nimport { TextField } from '@mui/material';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1 style={{ fontFamily: \"Roboto\" }}>Registration</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <TextField\n            label=\"Name:\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n\n          <TextField\n            label=\"E-mail:\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            label=\"Password:\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n          <br />\n          <Button\n            style={{ marginTop: 25 }}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            SIGN UP ðŸŸ¦\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n//Short version\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n//Full version\n/* const mapDispatchToProps = dispatch=>{\n  onSubmit: (data)=>dispatch (authOperations.register(data))\n} */\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","style","fontFamily","onSubmit","autoComplete","type","onChange","marginTop","variant","color","Component","mapDispatchToProps","authOperations","connect"],"sourceRoot":""}