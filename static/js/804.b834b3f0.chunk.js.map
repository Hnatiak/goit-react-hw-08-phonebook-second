{"version":3,"file":"static/js/804.b834b3f0.chunk.js","mappings":"uVAWe,SAASA,IACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAY,mCAAG,WAAOC,GAAP,oEACrBA,EAAEC,iBAEGV,GAASE,GAAUE,EAHH,uBAInBO,EAAAA,GAAAA,MAAY,4MAJO,+BASjBT,EAAMU,OAAS,GATE,yCAUZD,EAAAA,GAAAA,MAAY,gWAVA,UAcjBT,EAAMW,OAAO,KAAOX,EAAMW,OAAO,GAAGC,cAdnB,yCAeZH,EAAAA,GAAAA,MAAY,8QAfA,iCAmBbd,EAASkB,EAAAA,EAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAnBnC,QAoBnBO,EAAAA,GAAAA,MAAY,wQACZV,EAAQ,IACRE,EAAS,IACTE,EAAY,IAvBO,kDAyBnBM,EAAAA,GAAAA,MAAY,sCAzBO,0DAAH,sDA6BZK,EAAe,SAACC,GACtB,MAAwBA,EAAMC,OAAtBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACZ,OAAQnB,GACR,IAAK,OACLC,EAAQkB,GACR,MACA,IAAK,QACLhB,EAASgB,GACT,MACA,IAAK,WACLd,EAAYc,GACZ,MACA,QACA,OAED,EAMD,OACA,iBAAKC,MAAO,CAAEC,UAAW,OAAQC,MAAO,SAAxC,WACA,eAAIF,MAAO,CAAEG,aAAc,QAA3B,2BAEE,kBACEH,MAAO,CAAEG,aAAc,QACvBC,SAAUhB,EACViB,aAAa,MAHf,WAKE,SAAC,IAAD,CACEL,MAAO,CAAEG,aAAc,OAAQD,MAAO,KACtCI,MAAM,QACNC,KAAK,OACL3B,KAAK,OACLmB,MAAOnB,EACP4B,SAAUZ,KAGZ,SAAC,IAAD,CACEI,MAAO,CAAEG,aAAc,OAAQD,MAAO,KACtCI,MAAM,UACNC,KAAK,QACL3B,KAAK,QACLmB,MAAOjB,EACP0B,SAAUZ,KAGV,SAAC,IAAD,CACAI,MAAO,CAAEE,MAAO,KAChBI,MAAM,YACNC,KAAMrB,EAAe,WAAa,OAClCN,KAAK,WACLmB,MAAOf,EACPwB,SAAUZ,EACVa,WAAY,CACVC,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QA3CmB,WACjCzB,GAAgB,SAAC0B,GAAD,OAAgBA,CAAhB,GACf,EA0CaC,KAAK,MAHP,SAKG5B,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,YAM9C,mBACA,SAAC,IAAD,CACEc,MAAO,CAAEC,UAAW,QACpBM,KAAK,SACLQ,QAAQ,YACRC,MAAM,UAJR,gCASF,SAAC,KAAD,MAGD,C","sources":["views/RegisterViews.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport { Button, IconButton, InputAdornment } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { toast, ToastContainer } from \"react-toastify\"; //toast\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from 'prop-types';\n// import { func } from 'prop-types';\n\nexport default function RegisterView() {\nconst dispatch = useDispatch();\nconst [name, setName] = useState(\"\");\nconst [email, setEmail] = useState(\"\");\nconst [password, setPassword] = useState(\"\");\nconst [showPassword, setShowPassword] = useState(true);\n\nconst handleSubmit = async (e) => {\ne.preventDefault();\n\nif (!name || !email || !password) {\n  toast.error(\"Будь ласка напишіть ім'я, емейл і пароль\");\n  return;\n}\n\n// Check if email is too short\nif (email.length < 7) {\n  return toast.error(\"Ваш емейл має надто мало символів, будь ласка напишіть довший емейл\");\n}\n\n// Check if email starts with capital letter\nif (email.charAt(0) === email.charAt(0).toUpperCase()) {\n  return toast.error(\"Будь ласка напишіть свій емейл з малесеньких літер\");\n}\n\ntry {\n  await dispatch(authOperations.register({ name, email, password }));\n  toast.error(\"Ваш пароль не підходить, напишіть будь ласка інший\");\n  setName(\"\");\n  setEmail(\"\");\n  setPassword(\"\");\n} catch (error) {\n  toast.error(\"Invalid password, please try again\");\n}\n};\n\nconst handleChange = (event) => {\nconst { name, value } = event.target;\n  switch (name) {\n  case \"name\":\n  setName(value);\n  break;\n  case \"email\":\n  setEmail(value);\n  break;\n  case \"password\":\n  setPassword(value);\n  break;\n  default:\n  return;\n  }\n};\n\nconst togglePasswordVisibility = () => {\nsetShowPassword((prevState) => !prevState);\n};\n\nreturn (\n<div style={{ marginTop: \"35px\", width: \"320px\" }}>\n<h1 style={{ marginBottom: \"35px\" }}>Registration</h1>\n\n  <form\n    style={{ marginBottom: \"15px\" }}\n    onSubmit={handleSubmit}\n    autoComplete=\"off\"\n  >\n    <TextField\n      style={{ marginBottom: \"15px\", width: 300 }}\n      label=\"Name:\"\n      type=\"text\"\n      name=\"name\"\n      value={name}\n      onChange={handleChange}\n    />\n\n    <TextField\n      style={{ marginBottom: \"15px\", width: 300 }}\n      label=\"E-mail:\"\n      type=\"email\"\n      name=\"email\"\n      value={email}\n      onChange={handleChange}\n    />\n\n      <TextField\n      style={{ width: 300 }}\n      label=\"Password:\"\n      type={showPassword ? \"password\" : \"text\"}\n      name=\"password\"\n      value={password}\n      onChange={handleChange}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={togglePasswordVisibility}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n    <br />\n    <Button\n      style={{ marginTop: \"25px\" }}\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      SIGN UP ✅\n    </Button>\n  </form>\n  <ToastContainer />\n</div>\n);\n}\n\n// RegisterView.propTypes = {\n//   onRegister: func.isRequired,\n//   };\n\nRegisterView.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  showPassword: PropTypes.bool.isRequired,\n  onRegister: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  togglePasswordVisibility: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","handleSubmit","e","preventDefault","toast","length","charAt","toUpperCase","authOperations","handleChange","event","target","value","style","marginTop","width","marginBottom","onSubmit","autoComplete","label","type","onChange","InputProps","endAdornment","position","onClick","prevState","edge","variant","color"],"sourceRoot":""}